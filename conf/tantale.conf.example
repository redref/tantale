################################################################################
# Tantale Configuration File
################################################################################

################################################################################
### Options for the server
[server]

# User tantale will run as
# Leave empty to use the current user
user =

# Group tantale will run as
# Leave empty to use the current group
group =

# Pid file
pid_file = /var/run/tantale.pid

################################################################################
### Options for backends
[modules]

[[Livestatus]]
enabled = True
port = 6557

[[Input]]
enabled = True
port = 2003

#Â Max time (in seconds) check may wait others (in backend POV)
ttl = 5

# Freshness timeout (warning if check not fresh)
#  status => 1, ouput prefixed with 'OUTDATED '
# freshness_timeout = 120

# Maximum number of checks waiting to be processed.
# When queue is full, new are dropped.
queue_size = 16384

[[Client]]
enabled = False

# Tantale Input server
server_host = 127.0.0.1
server_port = 2003

# Contacts_groups for the host
contacts = user_1, user_2

# Where to read checks
diamond_fifo = /dev/shm/diamond_to_fifo
nagios_fifo = /dev/shm/nagios_fifo

# Checks definition
# Checks definition
[[[root]]]
type = diamond
metric_prefix = servers.domain.my_fqdn
hostname = fqdn.domain
thresholds = 10,20,"",""
expression = {diskspace.root.byte_free} / {diskspace.root.byte_avail} * 100

[[[Host]]]
type = diamond
metric_prefix = servers.domain.my_fqdn
hostname = fqdn.domain
thresholds = 10,20,20,80
expression = {diskspace.root.byte_percentfree}

################################################################################
### Options for backends
[backends]

[[ElasticsearchBackend]]
# python-elasticsearch options
hosts = http://127.0.0.1:9200
use_ssl = False
verify_certs = False
ca_certs = ''
sniffer_timeout = 30
sniff_on_start = True
sniff_on_connection_fail = True

# index options
status_index = test_status
log_index = test_status_logs
log_index_rotation = 'daily'
request_timeout = 30

# Backend specific options
# Maximum size for batch update
batch = 1000
# maximum checks keeped in memory (FIFO) in case backend failing (trim)
backlog_size = 500

################################################################################
### Options for logging
# Will be merged with tantale minimal configuration.
# You may need to use or override minimal configuration defined objects 
# Here a list of usefull ones

# [[handlers]]
# [[[stdout]]]
# class = logging.StreamHandler
# level = NOTSET
# formatter = default
# stream = ext://sys.stdout
# [[[null]]]
# class = logging.NullHandler
# level = NOTSET
# [[formatters]]
# [[[default]]]
# format = '[%(asctime)s] %(levelname)8s [%(processName)s] %(message)s'
# datefmt = '%Y-%m-%d %H:%M:%S'

[logging]

[[loggers]]

[[[tantale]]]
level = INFO
handlers = rotated_file,

# Example overriding livestatus specific logger
# [[[tantale.livestatus]]]
# level = DEBUG

[[handlers]]

[[[rotated_file]]]
class = logging.handlers.TimedRotatingFileHandler
level = NOTSET
formatter = default
# rotate at midnight, each day and keep 7 days
filename = /var/log/tantale/tantale.log
when = midnight
interval = 1
backupCount = 7
